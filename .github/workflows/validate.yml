name: validate

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Run Dart Analyzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: Analyze
        uses: invertase/github-action-dart-analyzer@v1
        with:
          fatal-infos: true
          fatal-warnings: true
  build_example_android_stable:
    name: Build Android example app (stable channel)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: Build
        run: melos run build:example_android
  build_example_android_300:
    name: Build Android example app (3.0.0)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.0.0
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: Build
        run: melos run build:example_android
  build_example_ios_stable:
    name: Build iOS example app (stable channel)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: Build
        run: melos run build:example_ios
  build_example_macos_stable:
    name: Build macOS example app (stable channel)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: Build
        run: melos run build:example_macos
  build_example_linux_stable:
    name: Build Linux example app (stable channel)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter config --enable-linux-desktop
      - name: Build
        run: melos run build:example_linux
  build_example_linux_300:
    name: Build Linux example app (3.0.0)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.0.0
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter config --enable-linux-desktop
      - name: Build
        run: melos run build:example_linux
  unit_tests_dart:
    name: Run all unit tests (Dart)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: Run Tests
        run: melos run test:unit --no-select
  unit_tests_android:
    name: Run all unit tests (Android)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: Run Tests
        run: melos run test:unit:android
  integration_tests_android:
    name: Run integration tests (Android)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: melos run test:integration
  integration_tests_ios:
    name: Run integration tests (iOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
      - name: Install Tools
        run: ./.github/workflows/scripts/install-tools.sh
      - uses: futureware-tech/simulator-action@v3
        id: simulator-action
        with:
          model: 'iPhone 13'
      - run: |
          brew tap wix/brew
          brew install applesimutils
          applesimutils --byId ${{ steps.simulator-action.outputs.udid}} --bundle com.dexterous.flutterLocalNotificationsExample --setPermissions notifications=YES
      - run: melos run test:integration



